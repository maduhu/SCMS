@using SCMS.Resource
@model IEnumerable<SCMS.Model.GoodsReceivedNoteItem>
           
<div class="partialViewCard">
    <div class="partialViewCardHeader">
        <h3>@Resources.GoodsReceivedNote_ViewUnregisteredAssets_Header</h3>
    </div>
    <br />
    
      @{
        var pagerStyleFlags = new[] 
        { 
            //new { Key = "pageInput", Value = GridPagerStyles.PageInput },
            //new { Key = "nextPrevious", Value = GridPagerStyles.NextPrevious },
            //new { Key = "numeric", Value = GridPagerStyles.Numeric },
            new { Key = "pageSize", Value = GridPagerStyles.PageSizeDropDown }
        };

        GridPagerStyles pagerStyles = GridPagerStyles.NextPreviousAndNumeric;
        //GridPagerStyles pagerStyles = GridPagerStyles.NextPrevious;
        foreach (var pagerStyleFlag in pagerStyleFlags)
        {
            pagerStyles |= pagerStyleFlag.Value;

        }
    }

 @(Html.Telerik().Grid(Model)
        .Name("UnRegisteredAssets")
        .DataKeys(keys => keys.Add(o => o.Id))
        .Columns(columns =>
        {
            columns.Bound(c => c.Id).Hidden();
            columns.Bound(c => c.GRNNo).Title(Resources.Global_String_GRNNo).Width("17%")
                .Aggregate(aggregates => aggregates.Count())
                    .ClientGroupFooterTemplate("Count: <#= Count #>");
            columns.Bound(c => c.ItemName).Title(Resources.Global_String_ItemName).Width("17%");
            columns.Bound(c => c.Unit).Title(Resources.Global_String_Unit).Width("10%");
            columns.Bound(c => c.POQty).Title(Resources.Global_String_QtyOrdered).Width("14%");
            columns.Bound(c => c.QuantityDelivered).Title(Resources.Global_String_QtyDelivered).Format("{0:n0}").Width(100);
            columns.Bound(c => c.QuantityDamaged).Title(Resources.Global_String_QtyDamaged).Format("{0:n0}").Width("14%");
            columns.Bound(c => c.Comments).Title(Resources.Global_String_Comments).Width("14%");     
        })
        .Filterable(filtering => filtering.Enabled(true))
        .Pageable(settings => settings.Style(pagerStyles).PageSize(10, new int[] { 10, 20, 50, 100, 200 }).Position(GridPagerPosition.Both))
        .Sortable(settings => settings.Enabled(true).SortMode(GridSortMode.MultipleColumn))
        .DataBinding(dataBinding => dataBinding.Ajax().Select("AssetFiltering", "GoodsReceivedNote"))
        .Selectable()
        .ClientEvents(events => events.OnRowSelected("onUnRegiAStRowSelected"))
        .Groupable()
)
    <br />
</div>