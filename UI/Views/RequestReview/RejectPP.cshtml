@using SCMS.Resource
@model SCMS.Model.RejectPP
@{AjaxOptions ajaxOpts = new AjaxOptions
  {
      UpdateTargetId = "popup-page",
      LoadingElementId = "popup-loading",
      HttpMethod = "Post",
      Url = Url.Action("RejectPP"),
      OnSuccess = string.Format("ReviewComplete('{0}', '{1}');ReloadPP('{2}');", Resources.RequestReview_String_PPRejected, Resources.Global_String_ProcurementPlan, Model.Id),
      Confirm = Resources.RequestReview_String_ProceedRejection   
  };}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    
@using (Ajax.BeginForm(null, null, ajaxOpts, new { @class = "form" }))
{
    @Html.ValidationSummary(true)    
    string backURL = "";
    <h4 style="text-align: center;">@Resources.Global_String_ProcurementPlan.ToUpper()</h4>
    <center><b>@Model.RefNumber</b></center>
    <table width="98%" align="center">
        <tr>
            <td colspan="2">@Resources.RequestReview_String_RejectionRemarks:</td>
        </tr>
        <tr>
            <td colspan="2">
            @{
                @Html.TextAreaFor(model => model.RejectionRemarks)
                @Html.ValidationMessageFor(model => model.RejectionRemarks, Resources.Global_String_Required)
                backURL = "/RequestReview/ApprovePP?ppId=" + Model.Id + "&actionType=" + Model.ActionType;
                @Html.HiddenFor(model => model.Id)    
                @Html.HiddenFor(model => model.ActionType)
            }            
            </td>
        </tr>
        <tr>
            <td width="50%"><a href="#" class="reviewLink" onclick="sendRequest('@backURL', 'popup-page', 'popup-loading'); CenterPopup();">@Resources.Global_String_Back</a></td>
            <td width="50%" align="right"><input type="submit" class="btn tertiary" value="@Resources.RequestReview_String_RejectPP" /></td>
        </tr>
    </table>
}
