@using SCMS.Resource
@model IEnumerable<SCMS.Model.AssetView>
<div class="partialViewCard">
    <div class="partialViewCardHeader">
        <h3>@Resources.Inventory_ViewAssetInventory_AssetInventory
        </h3>
    </div>
    <br />
    @{
        var pagerStyleFlags = new[] 
        { 
            //new { Key = "pageInput", Value = GridPagerStyles.PageInput },
            //new { Key = "nextPrevious", Value = GridPagerStyles.NextPrevious },
            //new { Key = "numeric", Value = GridPagerStyles.Numeric },
            new { Key = "pageSize", Value = GridPagerStyles.PageSizeDropDown }
        };

        GridPagerStyles pagerStyles = GridPagerStyles.NextPreviousAndNumeric;
        //GridPagerStyles pagerStyles = GridPagerStyles.NextPrevious;
        foreach (var pagerStyleFlag in pagerStyleFlags)
        {
            pagerStyles |= pagerStyleFlag.Value;

        }
    }

    @(Html.Telerik().Grid(Model)
            .Name("AssetInventory")
            .ToolBar(commands => commands
            .Custom()
                .HtmlAttributes(new { id = "Aexport" })
                .Text("Export to Excel")
                .Action("ExportCsv", "Inventory", new { page = 1, pageSize = 10, orderBy = "~", filter = "~", groupBy = "~" }))
            .Columns(columns =>
            {
                columns.Bound(o => o.AssetId).Hidden(true);
                columns.Bound(o => o.AssetNumber).Title(Resources.Global_String_AssetNo).Width("16%");
                columns.Bound(o => o.AssetName).Title(Resources.Global_String_AssetName).Width("17%");
                columns.Bound(o => o.OriginalProject).Title(Resources.GoodsReceivedNote_LoadOtherAssets_OriginalProject).Width("17%");
                columns.Bound(o => o.currentProject).Title(Resources.Global_String_CurrentProject).Width("17%");
                columns.Bound(o => o.WarehouseName).Title(Resources.Global_String_Warehouse).Width("16%");
                //.Aggregate(aggregates => aggregates.Count())
                //.ClientFooterTemplate("Total Count: <#= Count #>")
                //.ClientGroupFooterTemplate("Count: <#= Count #>");

                columns.Bound(o => o.AssignedTo).Title(Resources.Inventory_AssetInventoryPopup_AssignedTo).Width("17%");
            })
            .DataBinding(dataBinding => dataBinding.Ajax().Select("_AssetInventCustomBinding", "Inventory"))
            .Pageable(settings => settings.Style(pagerStyles).PageSize(10, new int[] { 10, 20, 50, 100, 200 }).Total((int)ViewData["total"]).Position(GridPagerPosition.Both))
            .EnableCustomBinding(true)
            .Selectable()
            .ClientEvents(events => events.OnRowSelected("onAssetRowSelected"))
            .ClientEvents(events => events.OnDataBound("onAssetDataBound"))
            .Filterable()
            .Groupable()
            .Sortable()
    )

    <br />
</div>
